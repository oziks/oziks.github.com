{"version":3,"sources":["fonts/Geomanist/Geomanist-Bold.ttf","fonts/Geomanist/Geomanist-Regular.ttf","fonts/Lora/Lora-Bold.ttf","fonts/Lora/Lora-BoldItalic.ttf","fonts/Lora/Lora-Italic.ttf","fonts/Lora/Lora-Regular.ttf","images/user.jpg","theme.js","DefaultStyles.js","components/Layout.js","components/UserBrand.js","helpers/date.js","components/Work.js","Resume.js","index.js"],"names":["module","exports","__webpack_require__","p","colors","fontFamilies","mediaQueries","App","Object","core_browser_esm","react_default","a","Fragment","styles","@font-face","fontFamily","fontStyle","fontWeight","src","concat","GeomanistBold","GeomanistRegular","LoraBold","LoraBoldItalic","LoraItalic","LoraRegular","html, body","padding","margin","minHeight","height","width","color","backgroundColor","#root","*, *:before, *:after","boxSizing","textDecoration","opacity","transition","&:hover","React","Component","Layout","_ref","props","esm_extends","assign","css","defineProperty","maxWidth","Loader","_ref$size","size","_ref$userName","userName","display","alignItems","alt","require","borderRadius","marginRight","formatDate","date","Date","isNaN","isValidDate","monthIndex","getMonth","year","getFullYear","Work","company","position","startDate","endDate","highlights","marginBottom","&:last-child","lineHeight","fontSize","makrginBottom","dangerouslySetInnerHTML","__html","join","Resume","DefaultStyles_App","components_Layout","UserBrand","resumeConfig","basics","name","label","summary","marginTop","work","map","components_Work","key","href","ReactDOM","render","createElement","src_Resume","document","getElementById"],"mappings":"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","file":"static/js/main.be17b773.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Geomanist-Bold.2d3327c5.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Geomanist-Regular.77cf7b2b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Bold.eb2b8c98.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lora-BoldItalic.04f84cd5.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Italic.d36745bb.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Lora-Regular.c87345ce.ttf\";","module.exports = __webpack_public_path__ + \"static/media/user.4caca270.jpg\";","export const colors = {\n  colorGlobal: \"black\",\n  colorWhite: \"white\",\n  colorHighlight: \"#c09\",\n  backgroundGlobal: \"white\"\n};\n\nexport const fontFamilies = {\n  geomanist: \"Geomanist\",\n  lora: \"Lora\"\n};\n\nexport const fontWeights = {\n  bold: 800,\n  regulat: 400\n};\n\nexport const mediaQueries = {\n  desktop: \"@media (min-width: 1024px)\",\n  tablet: \"@media (min-width: 768px) and (max-width: 1024px)\",\n  smartphone: \"@media (max-width: 400px)\"\n};\n","/** @jsx jsx */\nimport { jsx, Global } from \"@emotion/core\";\nimport React from \"react\";\nimport GeomanistBold from \"./fonts/Geomanist/Geomanist-Bold.ttf\";\nimport GeomanistRegular from \"./fonts/Geomanist/Geomanist-Regular.ttf\";\nimport LoraBold from \"./fonts/Lora/Lora-Bold.ttf\";\nimport LoraBoldItalic from \"./fonts/Lora/Lora-BoldItalic.ttf\";\nimport LoraItalic from \"./fonts/Lora/Lora-Italic.ttf\";\nimport LoraRegular from \"./fonts/Lora/Lora-Regular.ttf\";\nimport { colors, fontFamilies } from \"./theme\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <>\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.geomanist,\n              fontStyle: \"normal\",\n              fontWeight: 800,\n              src: `url(${GeomanistBold})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.geomanist,\n              fontStyle: \"normal\",\n              fontWeight: 400,\n              src: `url(${GeomanistRegular})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.lora,\n              fontStyle: \"normal\",\n              fontWeight: 800,\n              src: `url(${LoraBold})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.lora,\n              fontStyle: \"italic\",\n              fontWeight: 800,\n              src: `url(${LoraBoldItalic})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.lora,\n              fontStyle: \"italic\",\n              fontWeight: 400,\n              src: `url(${LoraItalic})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"@font-face\": {\n              fontFamily: fontFamilies.lora,\n              fontStyle: \"normal\",\n              fontWeight: 400,\n              src: `url(${LoraRegular})`\n            }\n          }}\n        />\n        <Global\n          styles={{\n            \"html, body\": {\n              padding: 0,\n              margin: 0,\n              minHeight: \"100%\",\n              height: \"100%\",\n              width: \"100%\",\n              fontFamily: fontFamilies.lora,\n              fontWeight: 400,\n              color: colors.colorGlobal,\n              backgroundColor: colors.backgroundGlobal\n            },\n            \"#root\": {\n              minHeight: \"100%\",\n              height: \"100%\"\n            },\n            \"*, *:before, *:after\": {\n              boxSizing: \"border-box\",\n              margin: 0,\n              padding: 0\n            },\n            a: {\n              textDecoration: \"none\",\n              opacity: 0.8,\n              color: colors.colorHighlight,\n              transition: \"opacity 300ms ease-in\",\n              \"&:hover\": {\n                opacity: 1\n              }\n            }\n          }}\n        />\n      </>\n    );\n  }\n}\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { mediaQueries } from \"../theme\";\n\nconst Layout = ({ ...props }) => {\n  return (\n    <div\n      {...props}\n      css={{\n        maxWidth: 920,\n        padding: \"40px 30px\",\n        margin: \"0 auto\",\n        [mediaQueries.desktop]: {\n          padding: \"58px 62px 30px\"\n        }\n      }}\n    />\n  );\n};\n\nexport default Layout;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { colors, fontFamilies } from \"../theme\";\n\nconst Loader = ({ size = 80, userName = \"Morgan Brunot\" }) => {\n  return (\n    <div css={{ height: size, display: \"flex\", alignItems: \"center\" }}>\n      <img\n        alt={userName}\n        src={require(\"../images/user.jpg\")}\n        css={{\n          width: size,\n          height: size,\n          borderRadius: \"50%\",\n          marginRight: 26\n        }}\n      />\n      <div\n        css={{ color: colors.colorGlobal, fontFamily: fontFamilies.geomanist }}\n      >\n        {userName}\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","export const isValidDate = (date) => {\n  return date instanceof Date && !isNaN(date);\n};\n\nexport const formatDate = (date) => {\n  if (!isValidDate(date)) {\n    return \"aujourd’hui\";\n  }\n\n  var monthNames = [\n    \"janvier\",\n    \"février\",\n    \"mars\",\n    \"avril\",\n    \"mai\",\n    \"juin\",\n    \"juillet\",\n    \"aout\",\n    \"septembre\",\n    \"octobre\",\n    \"novembre\",\n    \"décembre\",\n  ];\n\n  const monthIndex = date.getMonth();\n  const year = date.getFullYear();\n\n  return `${monthNames[monthIndex]} ${year}`;\n};\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { fontFamilies } from \"../theme\";\nimport { formatDate } from \"../helpers/date\";\n\nconst Work = ({ company, position, startDate, endDate, highlights }) => {\n  return (\n    <div\n      css={{\n        marginBottom: 36,\n        \"&:last-child\": {\n          marginBottom: 0\n        }\n      }}\n    >\n      <div\n        css={{\n          fontFamily: fontFamilies.geomanist,\n          fontWeight: 800,\n          lineHeight: \"40px\",\n          fontSize: 20\n        }}\n      >\n        <span\n          css={{\n            color: \"rgba(0, 0, 0, 0.8)\"\n          }}\n        >\n          {company} / {position}\n        </span>\n        <span\n          css={{\n            color: \"rgba(0, 0, 0, 0.4)\"\n          }}\n        >\n          &nbsp;/&nbsp;\n          {`${formatDate(new Date(startDate))} à ${formatDate(\n            new Date(endDate)\n          )}`}\n        </span>\n      </div>\n      <div\n        css={{\n          fontStyle: \"italic\",\n          lineHeight: \"28px\",\n          makrginBottom: 6\n        }}\n        dangerouslySetInnerHTML={{ __html: highlights.join(\" \") }}\n      />\n    </div>\n  );\n};\n\nexport default Work;\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport resumeConfig from \"./resume.json\";\nimport DefaultStyle from \"./DefaultStyles\";\nimport Layout from \"./components/Layout\";\nimport UserBrand from \"./components/UserBrand\";\nimport Work from \"./components/Work\";\nimport { colors, fontFamilies, mediaQueries } from \"./theme\";\n\nconst Resume = () => (\n  <>\n    <DefaultStyle />\n    <Layout>\n      <div>\n        <div css={{ marginBottom: 40 }}>\n          <UserBrand userName={resumeConfig.basics.name} />\n        </div>\n        <section>\n          <h1\n            css={{\n              marginBottom: 25,\n              fontFamily: fontFamilies.geomanist,\n              fontWeight: 800,\n              fontSize: 40,\n              lineHeight: \"50px\",\n              [mediaQueries.desktop]: {\n                fontSize: 50,\n                lineHeight: \"60px\"\n              }\n            }}\n          >\n            {resumeConfig.basics.label}&nbsp;\n            <span css={{ color: colors.colorHighlight }}>.</span>\n          </h1>\n          <p\n            css={{\n              fontFamily: fontFamilies.lora,\n              fontStyle: \"italic\",\n              lineHeight: \"28px\"\n            }}\n          >\n            {resumeConfig.basics.summary}\n          </p>\n        </section>\n      </div>\n      <section css={{ marginTop: 50 }}>\n        <h2\n          css={{\n            fontFamily: fontFamilies.geomanist,\n            fontWeight: 800,\n            fontSize: 30,\n            lineHeight: \"40px\",\n            marginBottom: 30\n          }}\n        >\n          <span css={{ color: colors.colorHighlight }}>•</span> Expérience\n        </h2>\n        {resumeConfig.work.map(work => (\n          <Work\n            key={work.company}\n            company={work.company}\n            position={work.position}\n            startDate={work.startDate}\n            endDate={work.endDate}\n            highlights={work.highlights}\n          />\n        ))}\n      </section>\n    </Layout>\n    <Layout>\n      <p css={{ fontStyle: \"italic\" }}>\n        Mon profil vous intéresse ? Contactez moi{\" \"}\n        <a href=\"mailto:brunot.morgan@gmail.com\">brunot.morgan@gmail.com</a>.\n      </p>\n    </Layout>\n  </>\n);\n\nexport default Resume;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Resume from \"./Resume\";\n\nReactDOM.render(<Resume />, document.getElementById(\"root\"));\n"],"sourceRoot":""}